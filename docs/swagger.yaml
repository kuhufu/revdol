basePath: /v2
host: localhost
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: EnableSwagger revdol API
  version: "1.0"
paths:
  /count/forum/idol:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: all idol forum count
      tags:
      - count
  /count/forum/idol/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Idol ID
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: forum count
      tags:
      - count
  /count/forum/user/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a new pet to the store
      tags:
      - count
  /forum:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: page number
        in: query
        name: page
        type: integer
      - description: user id
        in: path
        name: user_id
        type: integer
      - description: idol id
        in: path
        name: idol_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a new pet to the store
      tags:
      - forums
  /forum/detail/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Forum ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add a new pet to the store
      tags:
      - forums
  /idol/detail:
    get:
      consumes:
      - application/json
      description: detail of all idols
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: all idol detail
      tags:
      - idols
  /idol/detail/{id}:
    get:
      consumes:
      - application/json
      description: idol detail
      parameters:
      - description: Idol ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: idol detail
      tags:
      - idols
  /idol/fans-num/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Idol ID
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: forum count
      tags:
      - idols
  /idol/meta:
    get:
      consumes:
      - application/json
      description: get meta of all idols
      parameters:
      - description: page
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: all idol meta
      tags:
      - idols
  /idol/meta/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Idol ID
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: idol meta
      tags:
      - idols
  /idol/popular-num/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Idol ID
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: forum count
      tags:
      - idols
  /search/forum:
    get:
      consumes:
      - application/json
      description: search forum
      parameters:
      - description: search field
        in: query
        name: f
        required: true
        type: string
      - description: key word
        in: query
        name: wd
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: search forum by title
      tags:
      - search
  /search/user:
    get:
      consumes:
      - application/json
      description: search user
      parameters:
      - description: key word
        in: query
        name: wd
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: search user
      tags:
      - search
  /user/contribute/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: user contribute
      tags:
      - users
  /user/detail/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: user detail
      tags:
      - users
schemes:
- https
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
